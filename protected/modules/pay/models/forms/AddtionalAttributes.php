<?php
namespace pay\models\forms;

class AddtionalAttributes extends \CFormModel
{
  public $SuccessUrl;

  private $attributes;
  private $values;

  /**
   * @param \pay\models\AdditionalAttribute[] $attributes
   * @param string[] $values
   * @param string $scenario
   */
  public function __construct($attributes, $values, $scenario = '')
  {
    $this->attributes = $attributes;
    $this->values = $values;
    parent::__construct($scenario); // TODO: Change the autogenerated stub
  }

  private $rules = null;
  public function rules()
  {
    if ($this->rules == null)
    {
      $this->rules = [
        [implode(',', $this->attributeNames()).',SuccessUrl','required']
      ];
    }
    return $this->rules;
  }

  private $labels = null;
  public function attributeLabels()
  {
   if ($this->labels == null)
   {
     foreach ($this->attributes as $attr)
     {
       $this->labels[$attr->Name] = $attr->Label;
     }
   }
   return $this->labels;
  }

  /**
   * @return string[]
   */
  public function attributeNames()
  {
    $names = [];
    foreach ($this->attributes as $attr)
    {
      $names[] = $attr->Name;
    }
    return $names;
  }

  public function __get($name)
  {
    if (in_array($name, $this->attributeNames()))
    {
      if (array_key_exists($name, $this->values))
      {
        return $this->values[$name];
      }
      return '';
    }
    return parent::__get($name);
  }

  public function __set($name, $value)
  {
    if (in_array($name, $this->attributeNames()))
    {
      $this->values[$name] = $value;
      return $value;
    }
    return parent::__set($name, $value);
  }


  /**
   * @param $name
   * @return null|string
   * @throws \application\components\Exception
   */
  public function getHtmlActiveField($name)
  {
    $type = null;
    foreach ($this->attributes as $attr)
    {
      if ($attr->Name == $name)
      {
        $type = $attr->Type;
        break;
      }
    }

    if ($type == null)
      throw new \application\components\Exception('Не найдено поле с именем: '.$name);

    $result = null;
    switch ($type)
    {
      case \pay\models\AdditionalAttribute::TypeText: $result = \CHtml::activeTextField($this, $name, ['class' => 'input-block-level']);
        break;
      case \pay\models\AdditionalAttribute::TypeTextarea: $result = \CHtml::activeTextArea($this, $name, ['class' => 'input-block-level']);
        break;
      default:
        throw new \application\components\Exception('Неизветный тип поля: '.$type);
    }
    return $result;
  }

  /**
   * @return bool
   */
  public function getIsEmpty()
  {
    return empty($this->attributes);
  }
} 